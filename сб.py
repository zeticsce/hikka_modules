__version__ = (1, 0, 0)

#			‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó
#			‚ïö‚ïê‚ïê‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïê‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù
#			‚ñë‚ñë‚ñà‚ñà‚ñà‚ïî‚ïê‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ñë‚ñë‚ïö‚ïê‚ïù‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ïë‚ñë‚ñë‚ïö‚ïê‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñë
#			‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù‚ñë‚ñë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïó‚ñë‚ïö‚ïê‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù‚ñë‚ñë
#			‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó
#			‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ñë‚ñë‚ñë‚ïö‚ïê‚ïù‚ñë‚ñë‚ñë‚ïö‚ïê‚ïù‚ñë‚ïö‚ïê‚ïê‚ïê‚ïê‚ïù‚ñë‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ñë‚ñë‚ïö‚ïê‚ïê‚ïê‚ïê‚ïù‚ñë‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
#  				                 ¬© Copyright 2022
#  				              https://t.me/zeticsce
#  				
#  				    üîí         Licensed under the GNU AGPLv3
#  				    üåê https://www.gnu.org/licenses/agpl-3.0.html

# meta developer: @zeticsce
from .. import loader, utils
import asyncio
import telethon
@loader.tds
class SBebMod(loader.Module):
    """
–ü–æ–∫—É–ø–∞–µ—Ç –≤–∞–∫—Ü–∏–Ω—É –∏ –±—å–µ—Ç –ø–æ —Å–±
    """
    strings = {
        "name": "sbeb"

    }
    
    async def –∑–æcmd(self, message):
        """
–ò—Å–ø–æ–ª—å–∑—É–π: .–∑–æ {–∫–æ–ª-–≤–æ –ø–∞—Ç–æ–≤} [—Ä–µ–ø–ª–∞–π]
        """
        try:
            reply = await message.get_reply_message()
            args = utils.get_args_raw(message)
            text = reply.text
            txt = text.splitlines()
            org = "–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä –∑–∞—Ä–∞–∂–µ–Ω–∏—è:"
        except:
            pass
        pat = ""
        if not reply:
            return await message.edit("–≥–¥–µ —Ä–µ–ø–ª–∞–π –Ω–∞ —Å–±, –¥—É–±–∏–Ω–∞??")
        if args:
            try:
                pat = int(args)
            except:
                return await message.edit("—á—Ç–æ –∑–∞ —Ö—É–π–Ω—é —Ç—ã –≤–≤–µ–ª –≤ –∞—Ä–≥—É–º–µ–Ω—Ç—ã? –≤–≤–æ–¥–∏ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 10") 
            pat = str(f"{pat} ") 
            if pat > 10 or pat == 0:
                return await message.reply("—Ç—ã –≤–≤—ë–ª —Ö—É–π–Ω—é!")
        await message.reply("/–∫—É–ø–∏—Ç—å –≤–∞–∫—Ü–∏–Ω—É")
        for i in txt:
            if i.lower().startswith(str(org.lower())):
                b = i.find('href="') + 6
                c = i.find('">')
                link = i[b:c]
                
                if link.startswith('tg'):
                    user = '@' + link.split('=')[1]
                    await asyncio.sleep(4)
                    await message.reply(
                        f"/–∑–∞—Ä–∞–∑–∏—Ç—å {pat}{user}"
                    )
                elif link.startswith('https://t.me'):
                    a = '@' + str(link.split('/')[3])
                    await asyncio.sleep(4)
                    await message.reply(
                        f"/–∑–∞—Ä–∞–∑–∏—Ç—å {pat}{a}"
                    )
                else: 
                    await message.reply("—á—Ç–æ –∑–∞ —Ö—É–µ—Ç–µ")
